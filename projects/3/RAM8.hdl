// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in= true, sel= address, a= sel000, b= sel001, c= sel010, d= sel011, e= sel100, f= sel101, g= sel110, h= sel111);

    And(a= sel000, b= load, out= load000);
    And(a= sel001, b= load, out= load001);
    And(a= sel010, b= load, out= load010);
    And(a= sel011, b= load, out= load011);
    And(a= sel100, b= load, out= load100);
    And(a= sel101, b= load, out= load101);
    And(a= sel110, b= load, out= load110);
    And(a= sel111, b= load, out= load111);

    Register(in= in, load= load000, out= o01);
    Register(in= in, load= load001, out= o11);
    Register(in= in, load= load010, out= o21);
    Register(in= in, load= load011, out= o31);
    Register(in= in, load= load100, out= o41);
    Register(in= in, load= load101, out= o51);
    Register(in= in, load= load110, out= o61);
    Register(in= in, load= load111, out= o71);
    Mux8Way16(a= o01, b= o11, c= o21, d= o31, e= o41, f= o51, g= o61, h= o71, sel= address, out= out);
}
