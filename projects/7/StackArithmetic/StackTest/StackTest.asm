// C_PUSH: constant, 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: eq, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@$SYS_AUTO_LANEL_0
D;JEQ
@0
D=A
@$SYS_AUTO_LANEL_1
0;JMP
($SYS_AUTO_LANEL_0)
@0
D=!A
($SYS_AUTO_LANEL_1)
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: eq, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@$SYS_AUTO_LANEL_2
D;JEQ
@0
D=A
@$SYS_AUTO_LANEL_3
0;JMP
($SYS_AUTO_LANEL_2)
@0
D=!A
($SYS_AUTO_LANEL_3)
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: eq, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@$SYS_AUTO_LANEL_4
D;JEQ
@0
D=A
@$SYS_AUTO_LANEL_5
0;JMP
($SYS_AUTO_LANEL_4)
@0
D=!A
($SYS_AUTO_LANEL_5)
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: lt, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@$SYS_AUTO_LANEL_6
D;JLT
@0
D=A
@$SYS_AUTO_LANEL_7
0;JMP
($SYS_AUTO_LANEL_6)
@0
D=!A
($SYS_AUTO_LANEL_7)
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: lt, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@$SYS_AUTO_LANEL_8
D;JLT
@0
D=A
@$SYS_AUTO_LANEL_9
0;JMP
($SYS_AUTO_LANEL_8)
@0
D=!A
($SYS_AUTO_LANEL_9)
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: lt, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@$SYS_AUTO_LANEL_10
D;JLT
@0
D=A
@$SYS_AUTO_LANEL_11
0;JMP
($SYS_AUTO_LANEL_10)
@0
D=!A
($SYS_AUTO_LANEL_11)
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: gt, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@$SYS_AUTO_LANEL_12
D;JGT
@0
D=A
@$SYS_AUTO_LANEL_13
0;JMP
($SYS_AUTO_LANEL_12)
@0
D=!A
($SYS_AUTO_LANEL_13)
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: gt, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@$SYS_AUTO_LANEL_14
D;JGT
@0
D=A
@$SYS_AUTO_LANEL_15
0;JMP
($SYS_AUTO_LANEL_14)
@0
D=!A
($SYS_AUTO_LANEL_15)
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: gt, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@$SYS_AUTO_LANEL_16
D;JGT
@0
D=A
@$SYS_AUTO_LANEL_17
0;JMP
($SYS_AUTO_LANEL_16)
@0
D=!A
($SYS_AUTO_LANEL_17)
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: add, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: sub, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: neg, 
@SP
AM=M-1
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: and, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D&A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: or, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D|A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: not, 
@SP
AM=M-1
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
