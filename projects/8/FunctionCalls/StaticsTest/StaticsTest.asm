($SYS_LABEL_START)
@256
D=A
@SP
M=D
@$SYS_AUTO_LABEL_0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
($SYS_AUTO_LABEL_0)
($SYS_LABEL_END)
@$SYS_LABEL_END
0;JMP
($SYS_LABEL_CUSTOME_START)
// C_FUNCTION: Class1.set, 0
(Class1.set)
// C_PUSH: argument, 0
@0
D=A
@ARG
AD=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP: static, 0
@0
D=A
@0
D=D+A
@16
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: argument, 1
@1
D=A
@ARG
AD=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP: static, 1
@1
D=A
@0
D=D+A
@16
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: constant, 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN: , 
@LCL
AD=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// C_FUNCTION: Class1.get, 0
(Class1.get)
// C_PUSH: static, 0
@0
D=A
@0
D=D+A
@16
AD=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: static, 1
@1
D=A
@0
D=D+A
@16
AD=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: sub, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN: , 
@LCL
AD=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Class1 has 2 static variables, total 0 static variables
// C_FUNCTION: Class2.set, 0
(Class2.set)
// C_PUSH: argument, 0
@0
D=A
@ARG
AD=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP: static, 0
@0
D=A
@2
D=D+A
@16
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: argument, 1
@1
D=A
@ARG
AD=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP: static, 1
@1
D=A
@2
D=D+A
@16
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: constant, 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN: , 
@LCL
AD=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// C_FUNCTION: Class2.get, 0
(Class2.get)
// C_PUSH: static, 0
@0
D=A
@2
D=D+A
@16
AD=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: static, 1
@1
D=A
@2
D=D+A
@16
AD=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: sub, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN: , 
@LCL
AD=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Class2 has 2 static variables, total 2 static variables
// C_FUNCTION: Sys.init, 0
(Sys.init)
// C_PUSH: constant, 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_CALL: Class1.set, 2
@$SYS_AUTO_LABEL_1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
($SYS_AUTO_LABEL_1)
// C_POP: temp, 0
@0
D=A
@5
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: constant, 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_CALL: Class2.set, 2
@$SYS_AUTO_LABEL_2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
($SYS_AUTO_LABEL_2)
// C_POP: temp, 0
@0
D=A
@5
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_CALL: Class1.get, 0
@$SYS_AUTO_LABEL_3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
($SYS_AUTO_LABEL_3)
// C_CALL: Class2.get, 0
@$SYS_AUTO_LABEL_4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
($SYS_AUTO_LABEL_4)
// C_LABEL: END, 
(END)
// C_GOTO: END, 
@END
0;JMP
// Sys has 0 static variables, total 4 static variables
