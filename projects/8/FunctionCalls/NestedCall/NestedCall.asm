($SYS_LABEL_START)
@256
D=A
@SP
M=D
@$SYS_AUTO_LABEL_0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
($SYS_AUTO_LABEL_0)
($SYS_LABEL_END)
@$SYS_LABEL_END
0;JMP
($SYS_LABEL_CUSTOME_START)
// C_FUNCTION: Sys.init, 0
(Sys.init)
// C_PUSH: constant, 4000
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_POP: pointer, 0
@0
D=A
@3
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: constant, 5000
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_POP: pointer, 1
@1
D=A
@3
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_CALL: Sys.main, 0
@$SYS_AUTO_LABEL_1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
($SYS_AUTO_LABEL_1)
// C_POP: temp, 1
@1
D=A
@5
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_LABEL: LOOP, 
(LOOP)
// C_GOTO: LOOP, 
@LOOP
0;JMP
// C_FUNCTION: Sys.main, 5
(Sys.main)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 4001
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_POP: pointer, 0
@0
D=A
@3
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: constant, 5001
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_POP: pointer, 1
@1
D=A
@3
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: constant, 200
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_POP: local, 1
@1
D=A
@LCL
AD=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: constant, 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_POP: local, 2
@2
D=A
@LCL
AD=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: constant, 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_POP: local, 3
@3
D=A
@LCL
AD=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: constant, 123
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_CALL: Sys.add12, 1
@$SYS_AUTO_LABEL_2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
($SYS_AUTO_LABEL_2)
// C_POP: temp, 0
@0
D=A
@5
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: local, 0
@0
D=A
@LCL
AD=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: local, 1
@1
D=A
@LCL
AD=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: local, 2
@2
D=A
@LCL
AD=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: local, 3
@3
D=A
@LCL
AD=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: local, 4
@4
D=A
@LCL
AD=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: add, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: add, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: add, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: add, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN: , 
@LCL
AD=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// C_FUNCTION: Sys.add12, 0
(Sys.add12)
// C_PUSH: constant, 4002
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_POP: pointer, 0
@0
D=A
@3
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: constant, 5002
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_POP: pointer, 1
@1
D=A
@3
AD=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH: argument, 0
@0
D=A
@ARG
AD=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH: constant, 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_ARITHMETIC: add, 
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
// C_RETURN: , 
@LCL
AD=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Sys has 0 static variables, total 0 static variables
